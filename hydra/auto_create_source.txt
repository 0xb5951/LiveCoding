osc(8,0.5,0.1)
.pixelate(20, 30)
.rotate( ({time}) => time%360, ({time}) => Math.sin(time*0.1)*0.05 )
    .modulatePixelate(noise(25,1),50)
.blend(noise(8,0.5,2))
  .out(o0)
-----------
osc(8,-0.5, 1).color(-1.5, -1.5, -1.5).blend(o0).invert([5,1]).luma(0.5,0.1).out(o0)
-------------------
// by Nelson Vera
// twitter: @nel_sonologia
osc(8,-0.5, 1).color(-1.5, -1.5, -1.5).blend(o0).rotate(-0.5, -0.5).modulate(shape(4).rotate(0.5, 0.5).scale(2).repeatX(2, 2).modulate(o0, () => mouse.x * 0.0005).repeatY(2, 2)).out(o0)
-----------------
// by misterinterrupt
osc([81]).kaleid(2).color(0.3,0.5).rotate([40]).scale(14, 0.5, 8)
  .kaleid(24)
  .scrollY(0.5, 1.4)
  .mask(
    osc(512,({time}) => Math.sin(time/24) + 0.9 ) // offset
    .kaleid(3), [1,6], 0.5)// end mask
    .scrollX(1, 0.09)
    .scrollY(1, .333)
  .out(o1);
osc([14], [2]).rotate([1.4], [.04].fast(0.05), [7], [0.02].fast(20)).blend(o1, 7).out(o2);
osc(36).modulatePixelate(o1, 18).scrollX(0.3, [0.3, 3]).mult(o2, 256).mult(o1, -8).out(o0);
------------
r = 1;
n=4;
m=5;
a.setSmooth(0.95)
p=[16,16,25,25,8,8,50,500].fast(0.92);
shape(n,r).diff(shape(n,r*0.2).color([1,1,0].fast(0.2),[1,0,1].fast(0.3),[0,1,1].fast(0.1)))
  .repeatX(m,()=>2*a.fft[0])
  .repeatY(m,()=>-2*a.fft[1])
  //.scale(()=>0.25*(1+0.5*Math.sin(time)),innerHeight/innerWidth)
  .pixelate(p,p)
//.scrollX(0,-0.1)
.scrollY(0,()=>Math.sin(time*0.01)*0.02)
   .diff(shape(4, 0.2, 0))
    .diff(shape(4, 0.4, 0))
 .scale(2,innerHeight/innerWidth)
 // .blend(o0, 0.9)
  .modulate(src(o0).scrollX(0, 0.01).scale(1.2),()=>Math.sin(time*0.1)*0.03)
//  .thresh([0.1, 0.2, 0, 0.5])
  .out()
----------------
// Deme TÃ© > Ariel Contini / CLiC
osc(1,3,()=>a.fft[0]*11)
.diff(osc(1,.03,10))
.add(osc(0.10,.000001,1))
.add(voronoi(()=>a.fft[0]*0.080,()=>a.fft[0]*.001110))
.modulatePixelate(osc(1,1,1))
.mult(shape(111,.015,.18))//////
.blend(noise(.4,.8))
.color(2025,2)
.rotate(2,.2)
.modulateRotate(o0,10)
.repeatX(3)
//.scale(4,1)
.color(.01,0.01*8000,(time)=>Math.cos(10)*({time}*.10))
.add(noise(1000,1000))
//.diff(voronoi((time)=>Math.cos(10)*({time}*.10),10))
.invert()
.modulate(osc(10,.1,100))
.color(-2,-2,90)
.rotate(.01,.60)
.modulateKaleid(o0,1)
.out(o0)
voronoi(50,10,7)
.modulate(o0,1000)
.diff(o0)
.mask(o0)
.rotate(.21,20)
.out(o1)
render(o1)
----------------
// Julien Vermette
// https://github.com/lucidism
// pixelated offset
voronoi(11).pixelate(70, 90).rotate(-0.3).contrast(0.3).brightness(() => Math.sin(time * 0.5) * 0.2 - 0.5).luma(0.2).out(o1)
// vertical lines
osc(10, -0.07)
  .pixelate(90, 1)
  .rotate(0.2)
  .color(0.82, 0.74, 1.5)
  .luma(0.5)
  .contrast(1.4)
  .mult(osc(40, 0).luma(1).modulateScrollY(osc(38, 0)))
  .out(o3)
// main spirals
osc(20, 0, 0.2)
  .modulateRotate(osc(25, 0.07, 0).rotate(Math.PI / 2).modulateScale(osc(10, 0.08).rotate(Math.PI / 5)))
  .luma(() => Math.sin(time * 0.5) * 0.25 + 0.65)
  .brightness(0.15)
  .contrast(1.1)
  .color(0.77, 0.88, 1.4)
  .rotate(0.1)
  .scale(0.5)
  .add(o3)
  .modulateScrollX(o1)
  .mult(shape(40, () => Math.sin(time) / 9 + 0.35, 1.2))
  .out(o2)
render(o2)
---------------
